name: SSHX Session with Telegram and Tools

on:
  workflow_dispatch:

jobs:
  sshx:
    runs-on: ubuntu-latest

    steps:
      - name: Run SSHX with Backup + Telegram
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          send_telegram() {
            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="${CHAT_ID}" \
              -d parse_mode=Markdown \
              -d text="$1"
          }

          send_telegram "üöÄ *GitHub SSHX Session Started!* Initializing setup..."

          echo "‚öôÔ∏è Launching SSHX session"
          curl -sSf https://sshx.io/get | sh -s run -- bash -c '
            set -e  # Fail fast inside SSHX script

            echo "üîß Updating system"
            apt update && apt upgrade -y

            echo "üõ† Installing tools"
            apt install -y git curl vim zip tar

            echo "üìÅ Creating project directory"
            mkdir -p /root/my-project
            cd /root/my-project

            echo "üóÉ Backing up files (if any)"
            if [ "$(ls -A .)" ]; then
              zip -r /root/backup_$(date +%Y%m%d_%H%M%S).zip . || echo "Backup failed"
            else
              echo "No files to backup"
            fi

            echo "üß™ Simulating restore"
            BACKUP_FILE=$(ls /root/backup_*.zip 2>/dev/null | tail -n1)
            if [ -f "$BACKUP_FILE" ]; then
              unzip "$BACKUP_FILE" -d /root/restored_files
              echo "‚úÖ Restored to /root/restored_files"
            fi

            echo "‚úÖ SSHX session setup complete!"
            bash
          ' || send_telegram "‚ùå *SSHX Failed to Start or Crashed.* Check your workflow logs!"

          send_telegram "‚úÖ *SSHX Session Completed!* Tools installed, backup created/restored."
